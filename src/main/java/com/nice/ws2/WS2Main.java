package com.nice.ws2;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

public class WS2Main extends javax.swing.JFrame {

    public WS2Main() {
        initComponents();
        initBackground();
        world = new World();
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        tickButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(getDefaultWindowSize());

        tickButton.setText("Tick");
        tickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tickButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(374, 374, 374)
                                .addComponent(tickButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(365, 365, 365))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(268, Short.MAX_VALUE)
                                .addComponent(tickButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void tickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tickButtonActionPerformed
        tickButton.setEnabled(false);
        final String text = tickButton.getText();
        tickButton.setText("Processing....");
        world.doTick();
        this.repaint();
        //tickButton.repaint();
        //this.repaint(100);
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                finishWork(text); //Action performer event
            }
        });
    }//GEN-LAST:event_tickButtonActionPerformed

    private void finishWork(String text) {

        try {
            Thread.sleep(50L);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        tickButton.setText(text);
        tickButton.setEnabled(true);
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                    .UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                            .UIManager
                            .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                    .logging
                    .Logger
                    .getLogger(WS2Main.class.getName())
                    .log(java.util
                            .logging
                            .Level
                            .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                    .logging
                    .Logger
                    .getLogger(WS2Main.class.getName())
                    .log(java.util
                            .logging
                            .Level
                            .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                    .logging
                    .Logger
                    .getLogger(WS2Main.class.getName())
                    .log(java.util
                            .logging
                            .Level
                            .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                    .logging
                    .Logger
                    .getLogger(WS2Main.class.getName())
                    .log(java.util
                            .logging
                            .Level
                            .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
                .EventQueue
                .invokeLater(new Runnable() {
                    public void run() {
                        new WS2Main().setVisible(true);
                    }
                });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton tickButton;
    // End of variables declaration//GEN-END:variables

    private final int w = 1000;
    private final int h = 600;

    private BufferedImage img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
    private BufferedImage backgroundImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
    private World world;

    public void initBackground() {

        for (int i = 0; i < w; i++) {
            for (int j = 0; j < h; j++) {
                backgroundImage.setRGB(i, j, (j < h * 2 / 3 ? Color.BLUE.getRGB() : Color.GREEN.darker().getRGB()));
            }
        }
    }

    public Dimension getDefaultWindowSize() {
        return new Dimension(w + 5 * 8, h + 4 * 30 + 8);
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        Graphics ig = img.getGraphics();

        ig.drawImage(backgroundImage, 0, 0, w, h, this);
        world.paint(ig);

        //        for (zim.test.Point p : points) {
        //            ig.setColor(Color.WHITE);
        //            ig.fillOval(p.x - 3, p.y - 3, 26, 26);
        //            if (p.type == 0) ig.setColor(Color.GREEN);
        //            else ig.setColor(Color.BLUE);
        //            ig.fillOval(p.x, p.y, 20, 20);
        //        }
        g.drawImage(img, 12, 38, w + 12, h + 38, this);
    }


}
